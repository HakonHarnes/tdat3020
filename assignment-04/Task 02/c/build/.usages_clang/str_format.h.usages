22 serialization::archive 16 0 0 0 0 48 /home/hakon/programming/security/Assignment 06/c 54 /home/hakon/programming/security/Assignment 06/c/build 0 0 237 0 0 0 1 # 1 1 1 2 18446744073709551615 6 pragma 1 2 1 8 18446744073709551615 4 once 1 9 1 13 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 6 stddef 2 11 2 17 18446744073709551615 1 . 2 17 2 18 18446744073709551615 1 h 2 18 2 19 18446744073709551615 1 > 2 19 2 20 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 5 stdio 3 11 3 16 18446744073709551615 1 . 3 16 3 17 18446744073709551615 1 h 3 17 3 18 18446744073709551615 1 > 3 18 3 19 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 1 < 4 10 4 11 18446744073709551615 6 stdlib 4 11 4 17 18446744073709551615 1 . 4 17 4 18 18446744073709551615 1 h 4 18 4 19 18446744073709551615 1 > 4 19 4 20 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 1 < 5 10 5 11 18446744073709551615 6 string 5 11 5 17 18446744073709551615 1 . 5 17 5 18 18446744073709551615 1 h 5 18 5 19 18446744073709551615 1 > 5 19 5 20 18446744073709551615 4 char 7 1 7 5 18446744073709551615 1 * 7 6 7 7 0 9 strFormat 7 7 7 16 0 1 ( 7 16 7 17 0 5 const 7 17 7 22 18446744073709551615 4 char 7 23 7 27 18446744073709551615 1 * 7 28 7 29 18446744073709551615 5 input 7 29 7 34 1 1 ) 7 34 7 35 0 1 { 7 36 7 37 18446744073709551615 27 // Finds size of new string 9 3 9 30 18446744073709551615 6 size_t 10 3 10 9 2 4 size 10 10 10 14 3 1 = 10 15 10 16 18446744073709551615 6 strlen 10 17 10 23 4 1 ( 10 23 10 24 4 5 input 10 24 10 29 1 1 ) 10 29 10 30 4 1 ; 10 30 10 31 18446744073709551615 3 for 11 3 11 6 18446744073709551615 1 ( 11 7 11 8 18446744073709551615 3 int 11 8 11 11 18446744073709551615 1 i 11 12 11 13 5 1 = 11 14 11 15 18446744073709551615 1 0 11 16 11 17 18446744073709551615 1 ; 11 17 11 18 18446744073709551615 5 input 11 19 11 24 1 1 [ 11 24 11 25 18446744073709551615 1 i 11 25 11 26 5 1 ] 11 26 11 27 18446744073709551615 2 != 11 28 11 30 18446744073709551615 4 '\0' 11 31 11 35 18446744073709551615 1 ; 11 35 11 36 18446744073709551615 1 i 11 37 11 38 5 2 ++ 11 38 11 40 18446744073709551615 1 ) 11 40 11 41 18446744073709551615 1 { 11 42 11 43 18446744073709551615 2 if 12 5 12 7 18446744073709551615 1 ( 12 8 12 9 18446744073709551615 5 input 12 9 12 14 1 1 [ 12 14 12 15 18446744073709551615 1 i 12 15 12 16 5 1 ] 12 16 12 17 18446744073709551615 2 == 12 18 12 20 18446744073709551615 3 '&' 12 21 12 24 18446744073709551615 1 ) 12 24 12 25 18446744073709551615 1 { 12 26 12 27 18446744073709551615 4 size 13 7 13 11 3 2 += 13 12 13 14 18446744073709551615 1 4 13 15 13 16 18446744073709551615 1 ; 13 16 13 17 18446744073709551615 1 } 14 5 14 6 18446744073709551615 4 else 14 7 14 11 18446744073709551615 2 if 14 12 14 14 18446744073709551615 1 ( 14 15 14 16 18446744073709551615 5 input 14 16 14 21 1 1 [ 14 21 14 22 18446744073709551615 1 i 14 22 14 23 5 1 ] 14 23 14 24 18446744073709551615 2 == 14 25 14 27 18446744073709551615 3 '<' 14 28 14 31 18446744073709551615 2 || 14 32 14 34 18446744073709551615 5 input 14 35 14 40 1 1 [ 14 40 14 41 18446744073709551615 1 i 14 41 14 42 5 1 ] 14 42 14 43 18446744073709551615 2 == 14 44 14 46 18446744073709551615 3 '>' 14 47 14 50 18446744073709551615 1 ) 14 50 14 51 18446744073709551615 1 { 14 52 14 53 18446744073709551615 4 size 15 7 15 11 3 2 += 15 12 15 14 18446744073709551615 1 3 15 15 15 16 18446744073709551615 1 ; 15 16 15 17 18446744073709551615 1 } 16 5 16 6 18446744073709551615 1 } 17 3 17 4 18446744073709551615 34 // Allocates memory for new string 19 3 19 37 18446744073709551615 4 char 20 3 20 7 18446744073709551615 1 * 20 8 20 9 18446744073709551615 6 output 20 9 20 15 6 1 = 20 16 20 17 18446744073709551615 1 ( 20 18 20 19 18446744073709551615 4 char 20 19 20 23 18446744073709551615 1 * 20 24 20 25 18446744073709551615 1 ) 20 25 20 26 18446744073709551615 6 malloc 20 26 20 32 7 1 ( 20 32 20 33 7 6 sizeof 20 33 20 39 18446744073709551615 1 ( 20 39 20 40 18446744073709551615 4 char 20 40 20 44 18446744073709551615 1 ) 20 44 20 45 18446744073709551615 1 * 20 46 20 47 18446744073709551615 1 ( 20 48 20 49 18446744073709551615 4 size 20 49 20 53 3 1 + 20 54 20 55 18446744073709551615 1 1 20 56 20 57 18446744073709551615 1 ) 20 57 20 58 18446744073709551615 1 ) 20 58 20 59 7 1 ; 20 59 20 60 18446744073709551615 17 // Replaces Chars 22 3 22 20 18446744073709551615 3 for 23 3 23 6 18446744073709551615 1 ( 23 7 23 8 18446744073709551615 3 int 23 8 23 11 18446744073709551615 1 i 23 12 23 13 8 1 = 23 14 23 15 18446744073709551615 1 0 23 16 23 17 18446744073709551615 1 ; 23 17 23 18 18446744073709551615 5 input 23 19 23 24 1 1 [ 23 24 23 25 18446744073709551615 1 i 23 25 23 26 8 1 ] 23 26 23 27 18446744073709551615 2 != 23 28 23 30 18446744073709551615 4 '\0' 23 31 23 35 18446744073709551615 1 ; 23 35 23 36 18446744073709551615 1 i 23 37 23 38 8 2 ++ 23 38 23 40 18446744073709551615 1 ) 23 40 23 41 18446744073709551615 1 { 23 42 23 43 18446744073709551615 2 if 24 5 24 7 18446744073709551615 1 ( 24 8 24 9 18446744073709551615 5 input 24 9 24 14 1 1 [ 24 14 24 15 18446744073709551615 1 i 24 15 24 16 8 1 ] 24 16 24 17 18446744073709551615 2 == 24 18 24 20 18446744073709551615 3 '&' 24 21 24 24 18446744073709551615 1 ) 24 24 24 25 18446744073709551615 1 { 24 26 24 27 18446744073709551615 6 strcat 25 7 25 13 9 1 ( 25 13 25 14 9 6 output 25 14 25 20 6 1 , 25 20 25 21 9 7 "&amp;" 25 22 25 29 18446744073709551615 1 ) 25 29 25 30 9 1 ; 25 30 25 31 18446744073709551615 1 } 26 5 26 6 18446744073709551615 4 else 26 7 26 11 18446744073709551615 2 if 26 12 26 14 18446744073709551615 1 ( 26 15 26 16 18446744073709551615 5 input 26 16 26 21 1 1 [ 26 21 26 22 18446744073709551615 1 i 26 22 26 23 8 1 ] 26 23 26 24 18446744073709551615 2 == 26 25 26 27 18446744073709551615 3 '<' 26 28 26 31 18446744073709551615 1 ) 26 31 26 32 18446744073709551615 1 { 26 33 26 34 18446744073709551615 6 strcat 27 7 27 13 9 1 ( 27 13 27 14 9 6 output 27 14 27 20 6 1 , 27 20 27 21 9 6 "&lt;" 27 22 27 28 18446744073709551615 1 ) 27 28 27 29 9 1 ; 27 29 27 30 18446744073709551615 1 } 28 5 28 6 18446744073709551615 4 else 28 7 28 11 18446744073709551615 2 if 28 12 28 14 18446744073709551615 1 ( 28 15 28 16 18446744073709551615 5 input 28 16 28 21 1 1 [ 28 21 28 22 18446744073709551615 1 i 28 22 28 23 8 1 ] 28 23 28 24 18446744073709551615 2 == 28 25 28 27 18446744073709551615 3 '>' 28 28 28 31 18446744073709551615 1 ) 28 31 28 32 18446744073709551615 1 { 28 33 28 34 18446744073709551615 6 strcat 29 7 29 13 9 1 ( 29 13 29 14 9 6 output 29 14 29 20 6 1 , 29 20 29 21 9 6 "&gt;" 29 22 29 28 18446744073709551615 1 ) 29 28 29 29 9 1 ; 29 29 29 30 18446744073709551615 1 } 30 5 30 6 18446744073709551615 4 else 30 7 30 11 18446744073709551615 1 { 30 12 30 13 18446744073709551615 6 strcat 31 7 31 13 9 1 ( 31 13 31 14 9 6 output 31 14 31 20 6 1 , 31 20 31 21 9 1 ( 31 22 31 23 18446744073709551615 4 char 31 23 31 27 18446744073709551615 1 [ 31 27 31 28 18446744073709551615 1 2 31 28 31 29 18446744073709551615 1 ] 31 29 31 30 18446744073709551615 1 ) 31 30 31 31 18446744073709551615 1 { 31 31 31 32 18446744073709551615 1 ( 31 32 31 33 18446744073709551615 4 char 31 33 31 37 18446744073709551615 1 ) 31 37 31 38 18446744073709551615 5 input 31 38 31 43 1 1 [ 31 43 31 44 18446744073709551615 1 i 31 44 31 45 8 1 ] 31 45 31 46 18446744073709551615 1 , 31 46 31 47 18446744073709551615 4 '\0' 31 48 31 52 18446744073709551615 1 } 31 52 31 53 18446744073709551615 1 ) 31 53 31 54 9 1 ; 31 54 31 55 18446744073709551615 1 } 32 5 32 6 18446744073709551615 1 } 33 3 33 4 18446744073709551615 21 // Returns new string 35 3 35 24 18446744073709551615 6 return 36 3 36 9 18446744073709551615 6 output 36 10 36 16 6 1 ; 36 16 36 17 18446744073709551615 1 } 37 1 37 2 18446744073709551615 0 0 10 0 0 0 8 0 0 1 2 0 9 strFormat 10 1 2 0 66 7:29:/home/hakon/programming/security/Assignment 06/c/str_format.h 20 1 2 0 6 size_t 9 1 2 0 67 10:10:/home/hakon/programming/security/Assignment 06/c/str_format.h 8 1 2 0 6 strlen 9 1 2 0 67 11:12:/home/hakon/programming/security/Assignment 06/c/str_format.h 9 1 2 0 66 20:9:/home/hakon/programming/security/Assignment 06/c/str_format.h 8 1 2 0 6 malloc 9 1 2 0 67 23:12:/home/hakon/programming/security/Assignment 06/c/str_format.h 8 1 2 0 6 strcat 0 0 1 0 0 0 61 /home/hakon/programming/security/Assignment 06/c/str_format.h 1599665335